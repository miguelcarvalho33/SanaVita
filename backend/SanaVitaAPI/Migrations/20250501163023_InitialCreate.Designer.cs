// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SanaVitaAPI.Data;

#nullable disable

namespace SanaVitaAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250501163023_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SanaVitaAPI.Models.Alertum", b =>
                {
                    b.Property<int>("AlertaId")
                        .HasColumnType("int")
                        .HasColumnName("ALERTA_ID");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_FIM");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INICIO");

                    b.Property<int?>("FaixaEtariaFim")
                        .HasColumnType("int")
                        .HasColumnName("FAIXA_ETARIA_FIM");

                    b.Property<int?>("FaixaEtariaInicio")
                        .HasColumnType("int")
                        .HasColumnName("FAIXA_ETARIA_INICIO");

                    b.Property<int?>("SexoId")
                        .HasColumnType("int")
                        .HasColumnName("SEXO_ID");

                    b.Property<int?>("TipoAlertaId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_ALERTA_ID");

                    b.Property<int?>("TipoApresentacaoId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_APRESENTACAO_ID");

                    b.HasKey("AlertaId")
                        .HasName("ALERTA_PK");

                    b.HasIndex("SexoId");

                    b.HasIndex("TipoAlertaId");

                    b.HasIndex("TipoApresentacaoId");

                    b.ToTable("ALERTA", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Comercializacao", b =>
                {
                    b.Property<int>("ComercId")
                        .HasColumnType("int")
                        .HasColumnName("COMERC_ID");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_FIM");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INICIO");

                    b.Property<int?>("EmbId")
                        .HasColumnType("int")
                        .HasColumnName("EMB_ID");

                    b.Property<int?>("EstadoComercId")
                        .HasColumnType("int")
                        .HasColumnName("ESTADO_COMERC_ID");

                    b.HasKey("ComercId")
                        .HasName("COMERCIALIZACAO_PK");

                    b.HasIndex("EmbId");

                    b.HasIndex("EstadoComercId");

                    b.ToTable("COMERCIALIZACAO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Comparticipacao", b =>
                {
                    b.Property<int>("CompartId")
                        .HasColumnType("int")
                        .HasColumnName("COMPART_ID");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_FIM");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INICIO");

                    b.Property<int?>("EmbId")
                        .HasColumnType("int")
                        .HasColumnName("EMB_ID");

                    b.Property<int?>("NivelCompartId")
                        .HasColumnType("int")
                        .HasColumnName("NIVEL_COMPART_ID");

                    b.Property<int?>("NormaRegExcId")
                        .HasColumnType("int")
                        .HasColumnName("NORMA_REG_EXC_ID");

                    b.Property<int?>("RegimeExcecionalId")
                        .HasColumnType("int")
                        .HasColumnName("REGIME_EXCECIONAL_ID");

                    b.Property<int?>("TipoRegimeId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_REGIME_ID");

                    b.HasKey("CompartId")
                        .HasName("COMPARTICIPACAO_PK");

                    b.HasIndex("EmbId");

                    b.HasIndex("NivelCompartId");

                    b.HasIndex("NormaRegExcId");

                    b.HasIndex("RegimeExcecionalId");

                    b.HasIndex("TipoRegimeId");

                    b.ToTable("COMPARTICIPACAO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.CondArmazenamento", b =>
                {
                    b.Property<int>("CondArmazId")
                        .HasColumnType("int")
                        .HasColumnName("COND_ARMAZ_ID");

                    b.Property<int?>("EmbId")
                        .HasColumnType("int")
                        .HasColumnName("EMB_ID");

                    b.Property<int?>("EstadoArmazId")
                        .HasColumnType("int")
                        .HasColumnName("ESTADO_ARMAZ_ID");

                    b.Property<string>("NrPrazoVal")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NR_PRAZO_VAL");

                    b.Property<int?>("TemperaturaArmazId")
                        .HasColumnType("int")
                        .HasColumnName("TEMPERATURA_ARMAZ_ID");

                    b.Property<int?>("UnidTempPrazoValId")
                        .HasColumnType("int")
                        .HasColumnName("UNID_TEMP_PRAZO_VAL_ID");

                    b.HasKey("CondArmazId")
                        .HasName("COND_ARMAZENAMENTO_PK");

                    b.HasIndex("EmbId");

                    b.HasIndex("EstadoArmazId");

                    b.HasIndex("TemperaturaArmazId");

                    b.HasIndex("UnidTempPrazoValId");

                    b.ToTable("COND_ARMAZENAMENTO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.DocumentoAlertum", b =>
                {
                    b.Property<int?>("AlertaId")
                        .HasColumnType("int")
                        .HasColumnName("ALERTA_ID");

                    b.Property<DateTime?>("DataAprovacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_APROVACAO");

                    b.Property<string>("DestinatarioCidadao")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("DESTINATARIO_CIDADAO");

                    b.Property<string>("DestinatarioFarmaceutico")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("DESTINATARIO_FARMACEUTICO");

                    b.Property<string>("DestinatarioMedico")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("DESTINATARIO_MEDICO");

                    b.Property<string>("EntregaFarmaceutico")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("ENTREGA_FARMACEUTICO");

                    b.Property<string>("EntregaMedico")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("ENTREGA_MEDICO");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TITULO");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("URL");

                    b.HasIndex("AlertaId");

                    b.ToTable("DOCUMENTO_ALERTA", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Embalagem", b =>
                {
                    b.Property<int>("EmbId")
                        .HasColumnType("int")
                        .HasColumnName("EMB_ID");

                    b.Property<int?>("AcondPrimarioId")
                        .HasColumnType("int")
                        .HasColumnName("ACOND_PRIMARIO_ID");

                    b.Property<string>("CaractEspecificas")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CARACT_ESPECIFICAS");

                    b.Property<int?>("Cdm")
                        .HasColumnType("int")
                        .HasColumnName("CDM");

                    b.Property<int?>("ChnmCod")
                        .HasColumnType("int")
                        .HasColumnName("CHNM_COD");

                    b.Property<int?>("Cnpem")
                        .HasColumnType("int")
                        .HasColumnName("CNPEM");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<int?>("EstadoEmbId")
                        .HasColumnType("int")
                        .HasColumnName("ESTADO_EMB_ID");

                    b.Property<string>("GrupoHomCod")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("GRUPO_HOM_COD");

                    b.Property<string>("IndDispSeguranca")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_DISP_SEGURANCA");

                    b.Property<string>("IndEmbHospitalar")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_EMB_HOSPITALAR");

                    b.Property<string>("IndEmbUnitaria")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_EMB_UNITARIA");

                    b.Property<string>("NrRegisto")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NR_REGISTO");

                    b.Property<string>("PemAmb")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("PEM_AMB");

                    b.Property<string>("PemAmbBio")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("PEM_AMB_BIO");

                    b.Property<string>("PemAmbBioMs")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("PEM_AMB_BIO_MS");

                    b.Property<string>("PemAmbMs")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("PEM_AMB_MS");

                    b.Property<int?>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("PROD_ID");

                    b.Property<double?>("QuantTot")
                        .HasColumnType("float")
                        .HasColumnName("QUANT_TOT");

                    b.Property<double?>("Quantidade")
                        .HasColumnType("float")
                        .HasColumnName("QUANTIDADE");

                    b.Property<string>("Referencia")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("REFERENCIA");

                    b.Property<int?>("TipoEmbId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_EMB_ID");

                    b.Property<int?>("TipoTratamentoId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_TRATAMENTO_ID");

                    b.Property<int?>("UnidQuantId")
                        .HasColumnType("int")
                        .HasColumnName("UNID_QUANT_ID");

                    b.Property<int?>("UnidQuantTotId")
                        .HasColumnType("int")
                        .HasColumnName("UNID_QUANT_TOT_ID");

                    b.HasKey("EmbId")
                        .HasName("EMBALAGEM_PK");

                    b.HasIndex("AcondPrimarioId");

                    b.HasIndex("ChnmCod");

                    b.HasIndex("EstadoEmbId");

                    b.HasIndex("GrupoHomCod");

                    b.HasIndex("ProdId");

                    b.HasIndex("TipoEmbId");

                    b.HasIndex("TipoTratamentoId");

                    b.HasIndex("UnidQuantId");

                    b.HasIndex("UnidQuantTotId");

                    b.ToTable("EMBALAGEM", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Escoamento", b =>
                {
                    b.Property<int>("EscoamId")
                        .HasColumnType("int")
                        .HasColumnName("ESCOAM_ID");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_FIM");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INICIO");

                    b.Property<int?>("EmbId")
                        .HasColumnType("int")
                        .HasColumnName("EMB_ID");

                    b.Property<int?>("MotivoEscoamId")
                        .HasColumnType("int")
                        .HasColumnName("MOTIVO_ESCOAM_ID");

                    b.HasKey("EscoamId")
                        .HasName("ESCOAMENTO_PK");

                    b.HasIndex("EmbId");

                    b.HasIndex("MotivoEscoamId");

                    b.ToTable("ESCOAMENTO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkCondArmazConserv", b =>
                {
                    b.Property<int?>("CondArmazId")
                        .HasColumnType("int")
                        .HasColumnName("COND_ARMAZ_ID");

                    b.Property<int?>("CondConservId")
                        .HasColumnType("int")
                        .HasColumnName("COND_CONSERV_ID");

                    b.HasIndex("CondArmazId");

                    b.HasIndex("CondConservId");

                    b.ToTable("LNK_COND_ARMAZ_CONSERV", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkEmbCnpem", b =>
                {
                    b.Property<int>("EmbCnpemId")
                        .HasColumnType("int")
                        .HasColumnName("EMB_CNPEM_ID");

                    b.Property<int?>("Cnpem")
                        .HasColumnType("int")
                        .HasColumnName("CNPEM");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_FIM");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INICIO");

                    b.Property<int?>("EmbId")
                        .HasColumnType("int")
                        .HasColumnName("EMB_ID");

                    b.HasKey("EmbCnpemId")
                        .HasName("LNK_EMB_CNPEM_PK");

                    b.HasIndex("EmbId");

                    b.ToTable("LNK_EMB_CNPEM", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdAtc", b =>
                {
                    b.Property<string>("AtcCod")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ATC_COD");

                    b.Property<int?>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("PROD_ID");

                    b.HasIndex("AtcCod");

                    b.HasIndex("ProdId");

                    b.ToTable("LNK_PROD_ATC", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdCft", b =>
                {
                    b.Property<string>("CftChnm")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("CFT_CHNM");

                    b.Property<string>("CftCod")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("CFT_COD");

                    b.Property<int?>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("PROD_ID");

                    b.HasIndex("CftCod");

                    b.HasIndex("ProdId");

                    b.ToTable("LNK_PROD_CFT", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdClassDisp", b =>
                {
                    b.Property<int?>("ClassDispProdId")
                        .HasColumnType("int")
                        .HasColumnName("CLASS_DISP_PROD_ID");

                    b.Property<int?>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("PROD_ID");

                    b.HasIndex("ClassDispProdId");

                    b.HasIndex("ProdId");

                    b.ToTable("LNK_PROD_CLASS_DISP", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdGrupoProd", b =>
                {
                    b.Property<int?>("GrupoProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("GRUPO_PRODUTO_ID");

                    b.Property<int?>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("PROD_ID");

                    b.HasIndex("GrupoProdutoId");

                    b.HasIndex("ProdId");

                    b.ToTable("LNK_PROD_GRUPO_PROD", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdSubgrupoProd", b =>
                {
                    b.Property<int?>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("PROD_ID");

                    b.Property<int?>("SubgrupoProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("SUBGRUPO_PRODUTO_ID");

                    b.HasIndex("ProdId");

                    b.HasIndex("SubgrupoProdutoId");

                    b.ToTable("LNK_PROD_SUBGRUPO_PROD", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdSubst", b =>
                {
                    b.Property<int?>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("PROD_ID");

                    b.Property<string>("Quantidade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("QUANTIDADE");

                    b.Property<int?>("SubstId")
                        .HasColumnType("int")
                        .HasColumnName("SUBST_ID");

                    b.Property<int?>("UnidQuantId")
                        .HasColumnType("int")
                        .HasColumnName("UNID_QUANT_ID");

                    b.HasIndex("ProdId");

                    b.HasIndex("SubstId");

                    b.HasIndex("UnidQuantId");

                    b.ToTable("LNK_PROD_SUBST", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdViaAdmin", b =>
                {
                    b.Property<int?>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("PROD_ID");

                    b.Property<int?>("ViaAdminId")
                        .HasColumnType("int")
                        .HasColumnName("VIA_ADMIN_ID");

                    b.HasIndex("ProdId");

                    b.HasIndex("ViaAdminId");

                    b.ToTable("LNK_PROD_VIA_ADMIN", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.MensagemAlertum", b =>
                {
                    b.Property<int>("MensagemAlertaId")
                        .HasColumnType("int")
                        .HasColumnName("MENSAGEM_ALERTA_ID");

                    b.Property<int?>("AlertaId")
                        .HasColumnType("int")
                        .HasColumnName("ALERTA_ID");

                    b.Property<int?>("EmbId")
                        .HasColumnType("int")
                        .HasColumnName("EMB_ID");

                    b.Property<string>("Idioma")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IDIOMA");

                    b.Property<string>("Link")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LINK");

                    b.Property<string>("Mensagem")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MENSAGEM");

                    b.Property<int?>("TipoDestinatarioId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_DESTINATARIO_ID");

                    b.HasKey("MensagemAlertaId")
                        .HasName("MENSAGEM_ALERTA_PK");

                    b.HasIndex("AlertaId");

                    b.HasIndex("EmbId");

                    b.HasIndex("TipoDestinatarioId");

                    b.ToTable("MENSAGEM_ALERTA", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Preco", b =>
                {
                    b.Property<int>("PrecoId")
                        .HasColumnType("int")
                        .HasColumnName("PRECO_ID");

                    b.Property<string>("Ativo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("ATIVO");

                    b.Property<string>("AtivoMs")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("ATIVO_MS");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_FIM");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_INICIO");

                    b.Property<int?>("EmbId")
                        .HasColumnType("int")
                        .HasColumnName("EMB_ID");

                    b.Property<double?>("Preco1")
                        .HasColumnType("float")
                        .HasColumnName("PRECO");

                    b.Property<int?>("TipoPrecoId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_PRECO_ID");

                    b.HasKey("PrecoId")
                        .HasName("PRECO_PK");

                    b.HasIndex("EmbId");

                    b.HasIndex("TipoPrecoId");

                    b.ToTable("PRECO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Produto", b =>
                {
                    b.Property<int>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("PROD_ID");

                    b.Property<int?>("AgrupFormaFarmId")
                        .HasColumnType("int")
                        .HasColumnName("AGRUP_FORMA_FARM_ID");

                    b.Property<int?>("ClassEstpPsictrId")
                        .HasColumnType("int")
                        .HasColumnName("CLASS_ESTP_PSICTR_ID");

                    b.Property<DateTime?>("DataAim")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_AIM");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_ALTERACAO");

                    b.Property<DateTime?>("DataEstAim")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_EST_AIM");

                    b.Property<int?>("DciptId")
                        .HasColumnType("int")
                        .HasColumnName("DCIPT_ID");

                    b.Property<string>("Dosagem")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DOSAGEM");

                    b.Property<string>("DosagemCedencia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DOSAGEM_CEDENCIA");

                    b.Property<int?>("EstadoAimId")
                        .HasColumnType("int")
                        .HasColumnName("ESTADO_AIM_ID");

                    b.Property<int?>("FormaFarmId")
                        .HasColumnType("int")
                        .HasColumnName("FORMA_FARM_ID");

                    b.Property<string>("IndFnm")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_FNM");

                    b.Property<string>("IndGenerico")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_GENERICO");

                    b.Property<string>("IndMargemTerap")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_MARGEM_TERAP");

                    b.Property<string>("IndMonitAdicionalFv")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_MONIT_ADICIONAL_FV");

                    b.Property<string>("Marca")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MARCA");

                    b.Property<string>("Modelo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MODELO");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NOME");

                    b.Property<string>("NrProcesso")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NR_PROCESSO");

                    b.Property<string>("ProdGuid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PROD_GUID");

                    b.Property<int?>("TipoAutorizId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_AUTORIZ_ID");

                    b.Property<int?>("TipoProcedimentoId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_PROCEDIMENTO_ID");

                    b.Property<int?>("TipoProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_PRODUTO_ID");

                    b.Property<int?>("TitularAimId")
                        .HasColumnType("int")
                        .HasColumnName("TITULAR_AIM_ID");

                    b.HasKey("ProdId")
                        .HasName("PRODUTO_PK");

                    b.HasIndex("AgrupFormaFarmId");

                    b.HasIndex("ClassEstpPsictrId");

                    b.HasIndex("DciptId");

                    b.HasIndex("EstadoAimId");

                    b.HasIndex("FormaFarmId");

                    b.HasIndex("TipoAutorizId");

                    b.HasIndex("TipoProcedimentoId");

                    b.HasIndex("TipoProdutoId");

                    b.HasIndex("TitularAimId");

                    b.ToTable("PRODUTO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.ProdutoOperacao", b =>
                {
                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA");

                    b.Property<string>("Operacao")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("OPERACAO");

                    b.Property<int?>("ProdId")
                        .HasColumnType("int")
                        .HasColumnName("PROD_ID");

                    b.ToTable("PRODUTO_OPERACAO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefAcondPrimario", b =>
                {
                    b.Property<int>("AcondPrimarioId")
                        .HasColumnType("int")
                        .HasColumnName("ACOND_PRIMARIO_ID");

                    b.Property<string>("AbrevChnm")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ABREV_CHNM");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("AcondPrimarioId")
                        .HasName("REF_ACOND_PRIMARIO_PK");

                    b.ToTable("REF_ACOND_PRIMARIO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefAgrupFormaFarm", b =>
                {
                    b.Property<int>("AgrupFormaFarmId")
                        .HasColumnType("int")
                        .HasColumnName("AGRUP_FORMA_FARM_ID");

                    b.Property<string>("Abrev")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ABREV");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("AgrupFormaFarmId")
                        .HasName("REF_AGRUP_FORMA_FARM_PK");

                    b.ToTable("REF_AGRUP_FORMA_FARM", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefAtc", b =>
                {
                    b.Property<string>("AtcCod")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ATC_COD");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("AtcCod")
                        .HasName("REF_ATC_PK");

                    b.ToTable("REF_ATC", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefCft", b =>
                {
                    b.Property<string>("CftCod")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("CFT_COD");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("CftCod")
                        .HasName("REF_CFT_PK");

                    b.ToTable("REF_CFT", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefChnm", b =>
                {
                    b.Property<int>("ChnmCod")
                        .HasColumnType("int")
                        .HasColumnName("CHNM_COD");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.HasKey("ChnmCod")
                        .HasName("REF_CHNM_PK");

                    b.ToTable("REF_CHNM", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefClassDispensaProd", b =>
                {
                    b.Property<int>("ClassDispProdId")
                        .HasColumnType("int")
                        .HasColumnName("CLASS_DISP_PROD_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("ClassDispProdId")
                        .HasName("REF_CLASS_DISPENSA_PROD_PK");

                    b.ToTable("REF_CLASS_DISPENSA_PROD", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefClassEstpPsictr", b =>
                {
                    b.Property<int>("ClassEstpPsictrId")
                        .HasColumnType("int")
                        .HasColumnName("CLASS_ESTP_PSICTR_ID");

                    b.Property<string>("Abrev")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ABREV");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("ClassEstpPsictrId")
                        .HasName("REF_CLASS_ESTP_PSICTR_PK");

                    b.ToTable("REF_CLASS_ESTP_PSICTR", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefCondConservacao", b =>
                {
                    b.Property<int>("CondConservId")
                        .HasColumnType("int")
                        .HasColumnName("COND_CONSERV_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("CondConservId")
                        .HasName("REF_COND_CONSERVACAO_PK");

                    b.ToTable("REF_COND_CONSERVACAO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefDcipt", b =>
                {
                    b.Property<int>("DciptId")
                        .HasColumnType("int")
                        .HasColumnName("DCIPT_ID");

                    b.Property<string>("AbrevChnm")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ABREV_CHNM");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("DciptId")
                        .HasName("REF_DCIPT_PK");

                    b.ToTable("REF_DCIPT", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefEstadoAim", b =>
                {
                    b.Property<int>("EstadoAimId")
                        .HasColumnType("int")
                        .HasColumnName("ESTADO_AIM_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("EstadoAimId")
                        .HasName("REF_ESTADO_AIM_PK");

                    b.ToTable("REF_ESTADO_AIM", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefEstadoArmaz", b =>
                {
                    b.Property<int>("EstadoArmazId")
                        .HasColumnType("int")
                        .HasColumnName("ESTADO_ARMAZ_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("EstadoArmazId")
                        .HasName("REF_ESTADO_ARMAZ_PK");

                    b.ToTable("REF_ESTADO_ARMAZ", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefEstadoComerc", b =>
                {
                    b.Property<int>("EstComercId")
                        .HasColumnType("int")
                        .HasColumnName("EST_COMERC_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("EstComercId")
                        .HasName("REF_ESTADO_COMERC_PK");

                    b.ToTable("REF_ESTADO_COMERC", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefEstadoEmb", b =>
                {
                    b.Property<int>("EstadoEmbId")
                        .HasColumnType("int")
                        .HasColumnName("ESTADO_EMB_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("EstadoEmbId")
                        .HasName("REF_ESTADO_EMB_PK");

                    b.ToTable("REF_ESTADO_EMB", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefFormaFarm", b =>
                {
                    b.Property<int>("FormaFarmId")
                        .HasColumnType("int")
                        .HasColumnName("FORMA_FARM_ID");

                    b.Property<string>("Abrev")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ABREV");

                    b.Property<string>("AbrevChnm")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ABREV_CHNM");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("FormaFarmId")
                        .HasName("REF_FORMA_FARM_PK");

                    b.ToTable("REF_FORMA_FARM", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefGrupoHom", b =>
                {
                    b.Property<string>("GrupoHomCod")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("GRUPO_HOM_COD");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("GrupoHomCod")
                        .HasName("REF_GRUPO_HOM_PK");

                    b.ToTable("REF_GRUPO_HOM", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefGrupoProduto", b =>
                {
                    b.Property<int>("GrupoProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("GRUPO_PRODUTO_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("GrupoProdutoId")
                        .HasName("REF_GRUPO_PRODUTO_PK");

                    b.ToTable("REF_GRUPO_PRODUTO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefLocalDispensa", b =>
                {
                    b.Property<int>("LocalDispensaId")
                        .HasColumnType("int")
                        .HasColumnName("LOCAL_DISPENSA_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("LocalDispensaId")
                        .HasName("REF_LOCAL_DISPENSA_PK");

                    b.ToTable("REF_LOCAL_DISPENSA", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefMotivoEscoam", b =>
                {
                    b.Property<int>("MotivoEscoamId")
                        .HasColumnType("int")
                        .HasColumnName("MOTIVO_ESCOAM_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("MotivoEscoamId")
                        .HasName("REF_MOTIVO_ESCOAM_PK");

                    b.ToTable("REF_MOTIVO_ESCOAM", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefNivelCompart", b =>
                {
                    b.Property<int>("NivelCompartId")
                        .HasColumnType("int")
                        .HasColumnName("NIVEL_COMPART_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.Property<int?>("PercentCompart")
                        .HasColumnType("int")
                        .HasColumnName("PERCENT_COMPART");

                    b.HasKey("NivelCompartId")
                        .HasName("REF_NIVEL_COMPART_PK");

                    b.ToTable("REF_NIVEL_COMPART", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefNormaRegExc", b =>
                {
                    b.Property<int>("NormaRegExcId")
                        .HasColumnType("int")
                        .HasColumnName("NORMA_REG_EXC_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.Property<int?>("LocalDispensaId")
                        .HasColumnType("int")
                        .HasColumnName("LOCAL_DISPENSA_ID");

                    b.HasKey("NormaRegExcId")
                        .HasName("REF_NORMA_REG_EXC_PK");

                    b.HasIndex("LocalDispensaId");

                    b.ToTable("REF_NORMA_REG_EXC", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefRegimeExcecional", b =>
                {
                    b.Property<int>("RegimeExcecionalId")
                        .HasColumnType("int")
                        .HasColumnName("REGIME_EXCECIONAL_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("RegimeExcecionalId")
                        .HasName("REF_REGIME_EXCECIONAL_PK");

                    b.ToTable("REF_REGIME_EXCECIONAL", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefSexo", b =>
                {
                    b.Property<int>("SexoId")
                        .HasColumnType("int")
                        .HasColumnName("SEXO_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("SexoId")
                        .HasName("REF_SEXO_PK");

                    b.ToTable("REF_SEXO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefSubgrupoProduto", b =>
                {
                    b.Property<int>("SubgrupoProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("SUBGRUPO_PRODUTO_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("SubgrupoProdutoId")
                        .HasName("REF_SUBGRUPO_PRODUTO_PK");

                    b.ToTable("REF_SUBGRUPO_PRODUTO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefSubstancium", b =>
                {
                    b.Property<int>("SubstId")
                        .HasColumnType("int")
                        .HasColumnName("SUBST_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("SubstId")
                        .HasName("REF_SUBSTANCIA_PK");

                    b.ToTable("REF_SUBSTANCIA", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTemperaturaArmaz", b =>
                {
                    b.Property<int>("TemperaturaArmazId")
                        .HasColumnType("int")
                        .HasColumnName("TEMPERATURA_ARMAZ_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("TemperaturaArmazId")
                        .HasName("REF_TEMPERATURA_ARMAZ_PK");

                    b.ToTable("REF_TEMPERATURA_ARMAZ", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoAlertum", b =>
                {
                    b.Property<int>("TipoAlertaId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_ALERTA_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("TipoAlertaId")
                        .HasName("REF_TIPO_ALERTA_PK");

                    b.ToTable("REF_TIPO_ALERTA", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoApresentacao", b =>
                {
                    b.Property<int>("TipoApresentacaoId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_APRESENTACAO_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("TipoApresentacaoId")
                        .HasName("REF_TIPO_APRESENTACAO_PK");

                    b.ToTable("REF_TIPO_APRESENTACAO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoAutoriz", b =>
                {
                    b.Property<int>("TipoAutorizId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_AUTORIZ_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("TipoAutorizId")
                        .HasName("REF_TIPO_AUTORIZ_PK");

                    b.ToTable("REF_TIPO_AUTORIZ", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoDestinatario", b =>
                {
                    b.Property<int>("TipoDestinatarioId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_DESTINATARIO_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("TipoDestinatarioId")
                        .HasName("REF_TIPO_DESTINATARIO_PK");

                    b.ToTable("REF_TIPO_DESTINATARIO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoEmb", b =>
                {
                    b.Property<int>("TipoEmbId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_EMB_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("TipoEmbId")
                        .HasName("REF_TIPO_EMB_PK");

                    b.ToTable("REF_TIPO_EMB", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoPreco", b =>
                {
                    b.Property<int>("TipoPrecoId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_PRECO_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("TipoPrecoId")
                        .HasName("REF_TIPO_PRECO_PK");

                    b.ToTable("REF_TIPO_PRECO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoProcedimento", b =>
                {
                    b.Property<int>("TipoProcedimentoId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_PROCEDIMENTO_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("TipoProcedimentoId")
                        .HasName("REF_TIPO_PROCEDIMENTO_PK");

                    b.ToTable("REF_TIPO_PROCEDIMENTO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoProduto", b =>
                {
                    b.Property<int>("TipoProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_PRODUTO_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("TipoProdutoId")
                        .HasName("REF_TIPO_PRODUTO_PK");

                    b.ToTable("REF_TIPO_PRODUTO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoRegime", b =>
                {
                    b.Property<int>("TipoRegimeId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_REGIME_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("TipoRegimeId")
                        .HasName("REF_TIPO_REGIME_PK");

                    b.ToTable("REF_TIPO_REGIME", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoTratamento", b =>
                {
                    b.Property<int>("TipoTratamentoId")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_TRATAMENTO_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("TipoTratamentoId")
                        .HasName("REF_TIPO_TRATAMENTO_PK");

                    b.ToTable("REF_TIPO_TRATAMENTO", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTitularAim", b =>
                {
                    b.Property<int>("TitularAimId")
                        .HasColumnType("int")
                        .HasColumnName("TITULAR_AIM_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.HasKey("TitularAimId")
                        .HasName("REF_TITULAR_AIM_PK");

                    b.ToTable("REF_TITULAR_AIM", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefUnidade", b =>
                {
                    b.Property<int>("UnidadeId")
                        .HasColumnType("int")
                        .HasColumnName("UNIDADE_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("UnidadeId")
                        .HasName("REF_UNIDADE_PK");

                    b.ToTable("REF_UNIDADE", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefUnidadeTemporal", b =>
                {
                    b.Property<int>("UnidadeTemporalId")
                        .HasColumnType("int")
                        .HasColumnName("UNIDADE_TEMPORAL_ID");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("UnidadeTemporalId")
                        .HasName("REF_UNIDADE_TEMPORAL_PK");

                    b.ToTable("REF_UNIDADE_TEMPORAL", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefViaAdmin", b =>
                {
                    b.Property<int>("ViaAdminId")
                        .HasColumnType("int")
                        .HasColumnName("VIA_ADMIN_ID");

                    b.Property<string>("AbrevChnm")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ABREV_CHNM");

                    b.Property<string>("Descr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCR");

                    b.Property<string>("IndAtivo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("IND_ATIVO");

                    b.HasKey("ViaAdminId")
                        .HasName("REF_VIA_ADMIN_PK");

                    b.ToTable("REF_VIA_ADMIN", (string)null);
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Alertum", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.RefSexo", "Sexo")
                        .WithMany("Alerta")
                        .HasForeignKey("SexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_SEXOALERTA");

                    b.HasOne("SanaVitaAPI.Models.RefTipoAlertum", "TipoAlerta")
                        .WithMany("Alerta")
                        .HasForeignKey("TipoAlertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_TIPO_ALERTAALERTA");

                    b.HasOne("SanaVitaAPI.Models.RefTipoApresentacao", "TipoApresentacao")
                        .WithMany("Alerta")
                        .HasForeignKey("TipoApresentacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_TIPO_APRESENTACAOALERTA");

                    b.Navigation("Sexo");

                    b.Navigation("TipoAlerta");

                    b.Navigation("TipoApresentacao");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Comercializacao", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.Embalagem", "Emb")
                        .WithMany("Comercializacaos")
                        .HasForeignKey("EmbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("EMBALAGEMCOMERCIALIZACAO");

                    b.HasOne("SanaVitaAPI.Models.RefEstadoComerc", "EstadoComerc")
                        .WithMany("Comercializacaos")
                        .HasForeignKey("EstadoComercId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_ESTADO_COMERCCOMERCIALIZACAO");

                    b.Navigation("Emb");

                    b.Navigation("EstadoComerc");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Comparticipacao", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.Embalagem", "Emb")
                        .WithMany("Comparticipacaos")
                        .HasForeignKey("EmbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("EMBALAGEMCOMPARTICIPACAO");

                    b.HasOne("SanaVitaAPI.Models.RefNivelCompart", "NivelCompart")
                        .WithMany("Comparticipacaos")
                        .HasForeignKey("NivelCompartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_NIVEL_COMPARTCOMPARTICIPACAO");

                    b.HasOne("SanaVitaAPI.Models.RefNormaRegExc", "NormaRegExc")
                        .WithMany("Comparticipacaos")
                        .HasForeignKey("NormaRegExcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_NORMA_REG_EXCCOMPARTICIPACAO");

                    b.HasOne("SanaVitaAPI.Models.RefRegimeExcecional", "RegimeExcecional")
                        .WithMany("Comparticipacaos")
                        .HasForeignKey("RegimeExcecionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_REGIME_EXCECIONALCOMPARTICIPACAO");

                    b.HasOne("SanaVitaAPI.Models.RefTipoRegime", "TipoRegime")
                        .WithMany("Comparticipacaos")
                        .HasForeignKey("TipoRegimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_TIPO_REGIMECOMPARTICIPACAO");

                    b.Navigation("Emb");

                    b.Navigation("NivelCompart");

                    b.Navigation("NormaRegExc");

                    b.Navigation("RegimeExcecional");

                    b.Navigation("TipoRegime");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.CondArmazenamento", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.Embalagem", "Emb")
                        .WithMany("CondArmazenamentos")
                        .HasForeignKey("EmbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("EMBALAGEMCOND_ARMAZENAMENTO");

                    b.HasOne("SanaVitaAPI.Models.RefEstadoArmaz", "EstadoArmaz")
                        .WithMany("CondArmazenamentos")
                        .HasForeignKey("EstadoArmazId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_ESTADO_ARMAZCOND_ARMAZENAMENTO");

                    b.HasOne("SanaVitaAPI.Models.RefTemperaturaArmaz", "TemperaturaArmaz")
                        .WithMany("CondArmazenamentos")
                        .HasForeignKey("TemperaturaArmazId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_TEMPERATURA_ARMAZCOND_ARMAZENAMENTO");

                    b.HasOne("SanaVitaAPI.Models.RefUnidadeTemporal", "UnidTempPrazoVal")
                        .WithMany("CondArmazenamentos")
                        .HasForeignKey("UnidTempPrazoValId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_UNIDADE_TEMPORALCOND_ARMAZENAMENTO");

                    b.Navigation("Emb");

                    b.Navigation("EstadoArmaz");

                    b.Navigation("TemperaturaArmaz");

                    b.Navigation("UnidTempPrazoVal");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.DocumentoAlertum", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.Alertum", "Alerta")
                        .WithMany()
                        .HasForeignKey("AlertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("ALERTADOCUMENTO_ALERTA");

                    b.Navigation("Alerta");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Embalagem", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.RefAcondPrimario", "AcondPrimario")
                        .WithMany("Embalagems")
                        .HasForeignKey("AcondPrimarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_ACOND_PRIMARIOEMBALAGEM");

                    b.HasOne("SanaVitaAPI.Models.RefChnm", "ChnmCodNavigation")
                        .WithMany("Embalagems")
                        .HasForeignKey("ChnmCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_CHNMEMBALAGEM");

                    b.HasOne("SanaVitaAPI.Models.RefEstadoEmb", "EstadoEmb")
                        .WithMany("Embalagems")
                        .HasForeignKey("EstadoEmbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_ESTADO_EMBEMBALAGEM");

                    b.HasOne("SanaVitaAPI.Models.RefGrupoHom", "GrupoHomCodNavigation")
                        .WithMany("Embalagems")
                        .HasForeignKey("GrupoHomCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_GRUPO_HOMEMBALAGEM");

                    b.HasOne("SanaVitaAPI.Models.Produto", "Prod")
                        .WithMany("Embalagems")
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("PRODUTOEMBALAGEM");

                    b.HasOne("SanaVitaAPI.Models.RefTipoEmb", "TipoEmb")
                        .WithMany("Embalagems")
                        .HasForeignKey("TipoEmbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_TIPO_EMBEMBALAGEM");

                    b.HasOne("SanaVitaAPI.Models.RefTipoTratamento", "TipoTratamento")
                        .WithMany("Embalagems")
                        .HasForeignKey("TipoTratamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_TIPO_TRATAMENTOEMBALAGEM");

                    b.HasOne("SanaVitaAPI.Models.RefUnidade", "UnidQuant")
                        .WithMany("EmbalagemUnidQuants")
                        .HasForeignKey("UnidQuantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_UNIDADEEMBALAGEM");

                    b.HasOne("SanaVitaAPI.Models.RefUnidade", "UnidQuantTot")
                        .WithMany("EmbalagemUnidQuantTots")
                        .HasForeignKey("UnidQuantTotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_UNIDADEEMBALAGEM1");

                    b.Navigation("AcondPrimario");

                    b.Navigation("ChnmCodNavigation");

                    b.Navigation("EstadoEmb");

                    b.Navigation("GrupoHomCodNavigation");

                    b.Navigation("Prod");

                    b.Navigation("TipoEmb");

                    b.Navigation("TipoTratamento");

                    b.Navigation("UnidQuant");

                    b.Navigation("UnidQuantTot");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Escoamento", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.Embalagem", "Emb")
                        .WithMany("Escoamentos")
                        .HasForeignKey("EmbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("EMBALAGEMESCOAMENTO");

                    b.HasOne("SanaVitaAPI.Models.RefMotivoEscoam", "MotivoEscoam")
                        .WithMany("Escoamentos")
                        .HasForeignKey("MotivoEscoamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_MOTIVO_ESCOAMESCOAMENTO");

                    b.Navigation("Emb");

                    b.Navigation("MotivoEscoam");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkCondArmazConserv", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.CondArmazenamento", "CondArmaz")
                        .WithMany()
                        .HasForeignKey("CondArmazId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("COND_ARMAZENAMENTOLNK_COND_ARMAZ_CONSERV");

                    b.HasOne("SanaVitaAPI.Models.RefCondConservacao", "CondConserv")
                        .WithMany()
                        .HasForeignKey("CondConservId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_COND_CONSERVACAOLNK_COND_ARMAZ_CONSERV");

                    b.Navigation("CondArmaz");

                    b.Navigation("CondConserv");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkEmbCnpem", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.Embalagem", "Emb")
                        .WithMany("LnkEmbCnpems")
                        .HasForeignKey("EmbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("EMBALAGEMLNK_EMB_CNPEM");

                    b.Navigation("Emb");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdAtc", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.RefAtc", "AtcCodNavigation")
                        .WithMany()
                        .HasForeignKey("AtcCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_ATCLNK_PROD_ATC");

                    b.HasOne("SanaVitaAPI.Models.Produto", "Prod")
                        .WithMany()
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("PRODUTOLNK_PROD_ATC");

                    b.Navigation("AtcCodNavigation");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdCft", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.RefCft", "CftCodNavigation")
                        .WithMany()
                        .HasForeignKey("CftCod")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_CFTLNK_PROD_CFT");

                    b.HasOne("SanaVitaAPI.Models.Produto", "Prod")
                        .WithMany()
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("PRODUTOLNK_PROD_CFT");

                    b.Navigation("CftCodNavigation");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdClassDisp", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.RefClassDispensaProd", "ClassDispProd")
                        .WithMany()
                        .HasForeignKey("ClassDispProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_CLASS_DISPENSA_PRODLNK_PROD_CLASS_DISP");

                    b.HasOne("SanaVitaAPI.Models.Produto", "Prod")
                        .WithMany()
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("PRODUTOLNK_PROD_CLASS_DISP");

                    b.Navigation("ClassDispProd");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdGrupoProd", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.RefGrupoProduto", "GrupoProduto")
                        .WithMany()
                        .HasForeignKey("GrupoProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_GRUPO_PRODUTOLNK_PROD_GRUPO_PROD");

                    b.HasOne("SanaVitaAPI.Models.Produto", "Prod")
                        .WithMany()
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("PRODUTOLNK_PROD_GRUPO_PROD");

                    b.Navigation("GrupoProduto");

                    b.Navigation("Prod");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdSubgrupoProd", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.Produto", "Prod")
                        .WithMany()
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("PRODUTOLNK_PROD_SUBGRUPO_PROD");

                    b.HasOne("SanaVitaAPI.Models.RefSubgrupoProduto", "SubgrupoProduto")
                        .WithMany()
                        .HasForeignKey("SubgrupoProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_SUBGRUPO_PRODUTOLNK_PROD_SUBGRUPO_PROD");

                    b.Navigation("Prod");

                    b.Navigation("SubgrupoProduto");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdSubst", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.Produto", "Prod")
                        .WithMany()
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("PRODUTOLNK_PROD_SUBST");

                    b.HasOne("SanaVitaAPI.Models.RefSubstancium", "Subst")
                        .WithMany()
                        .HasForeignKey("SubstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_SUBSTANCIALNK_PROD_SUBST");

                    b.HasOne("SanaVitaAPI.Models.RefUnidade", "UnidQuant")
                        .WithMany()
                        .HasForeignKey("UnidQuantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_UNIDADELNK_PROD_SUBST");

                    b.Navigation("Prod");

                    b.Navigation("Subst");

                    b.Navigation("UnidQuant");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.LnkProdViaAdmin", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.Produto", "Prod")
                        .WithMany()
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("PRODUTOLNK_PROD_VIA_ADMIN");

                    b.HasOne("SanaVitaAPI.Models.RefViaAdmin", "ViaAdmin")
                        .WithMany()
                        .HasForeignKey("ViaAdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_VIA_ADMINLNK_PROD_VIA_ADMIN");

                    b.Navigation("Prod");

                    b.Navigation("ViaAdmin");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.MensagemAlertum", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.Alertum", "Alerta")
                        .WithMany("MensagemAlerta")
                        .HasForeignKey("AlertaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("ALERTAMENSAGEM_ALERTA");

                    b.HasOne("SanaVitaAPI.Models.Embalagem", "Emb")
                        .WithMany("MensagemAlerta")
                        .HasForeignKey("EmbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("EMBALAGEMMENSAGEM_ALERTA");

                    b.HasOne("SanaVitaAPI.Models.RefTipoDestinatario", "TipoDestinatario")
                        .WithMany("MensagemAlerta")
                        .HasForeignKey("TipoDestinatarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_TIPO_DESTINATARIOMENSAGEM_ALERTA");

                    b.Navigation("Alerta");

                    b.Navigation("Emb");

                    b.Navigation("TipoDestinatario");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Preco", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.Embalagem", "Emb")
                        .WithMany("Precos")
                        .HasForeignKey("EmbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("EMBALAGEMPRECO");

                    b.HasOne("SanaVitaAPI.Models.RefTipoPreco", "TipoPreco")
                        .WithMany("Precos")
                        .HasForeignKey("TipoPrecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_TIPO_PRECOPRECO");

                    b.Navigation("Emb");

                    b.Navigation("TipoPreco");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Produto", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.RefAgrupFormaFarm", "AgrupFormaFarm")
                        .WithMany("Produtos")
                        .HasForeignKey("AgrupFormaFarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_AGRUP_FORMA_FARMPRODUTO");

                    b.HasOne("SanaVitaAPI.Models.RefClassEstpPsictr", "ClassEstpPsictr")
                        .WithMany("Produtos")
                        .HasForeignKey("ClassEstpPsictrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_CLASS_ESTP_PSICTRPRODUTO");

                    b.HasOne("SanaVitaAPI.Models.RefDcipt", "Dcipt")
                        .WithMany("Produtos")
                        .HasForeignKey("DciptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_DCIPTPRODUTO");

                    b.HasOne("SanaVitaAPI.Models.RefEstadoAim", "EstadoAim")
                        .WithMany("Produtos")
                        .HasForeignKey("EstadoAimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_ESTADO_AIMPRODUTO");

                    b.HasOne("SanaVitaAPI.Models.RefFormaFarm", "FormaFarm")
                        .WithMany("Produtos")
                        .HasForeignKey("FormaFarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_FORMA_FARMPRODUTO");

                    b.HasOne("SanaVitaAPI.Models.RefTipoAutoriz", "TipoAutoriz")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoAutorizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_TIPO_AUTORIZPRODUTO");

                    b.HasOne("SanaVitaAPI.Models.RefTipoProcedimento", "TipoProcedimento")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoProcedimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_TIPO_PROCEDIMENTOPRODUTO");

                    b.HasOne("SanaVitaAPI.Models.RefTipoProduto", "TipoProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_TIPO_PRODUTOPRODUTO");

                    b.HasOne("SanaVitaAPI.Models.RefTitularAim", "TitularAim")
                        .WithMany("Produtos")
                        .HasForeignKey("TitularAimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_TITULAR_AIMPRODUTO");

                    b.Navigation("AgrupFormaFarm");

                    b.Navigation("ClassEstpPsictr");

                    b.Navigation("Dcipt");

                    b.Navigation("EstadoAim");

                    b.Navigation("FormaFarm");

                    b.Navigation("TipoAutoriz");

                    b.Navigation("TipoProcedimento");

                    b.Navigation("TipoProduto");

                    b.Navigation("TitularAim");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefNormaRegExc", b =>
                {
                    b.HasOne("SanaVitaAPI.Models.RefLocalDispensa", "LocalDispensa")
                        .WithMany("RefNormaRegExcs")
                        .HasForeignKey("LocalDispensaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("REF_LOCAL_DISPENSAREF_NORMA_REG_EXC");

                    b.Navigation("LocalDispensa");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Alertum", b =>
                {
                    b.Navigation("MensagemAlerta");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Embalagem", b =>
                {
                    b.Navigation("Comercializacaos");

                    b.Navigation("Comparticipacaos");

                    b.Navigation("CondArmazenamentos");

                    b.Navigation("Escoamentos");

                    b.Navigation("LnkEmbCnpems");

                    b.Navigation("MensagemAlerta");

                    b.Navigation("Precos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.Produto", b =>
                {
                    b.Navigation("Embalagems");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefAcondPrimario", b =>
                {
                    b.Navigation("Embalagems");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefAgrupFormaFarm", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefChnm", b =>
                {
                    b.Navigation("Embalagems");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefClassEstpPsictr", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefDcipt", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefEstadoAim", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefEstadoArmaz", b =>
                {
                    b.Navigation("CondArmazenamentos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefEstadoComerc", b =>
                {
                    b.Navigation("Comercializacaos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefEstadoEmb", b =>
                {
                    b.Navigation("Embalagems");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefFormaFarm", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefGrupoHom", b =>
                {
                    b.Navigation("Embalagems");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefLocalDispensa", b =>
                {
                    b.Navigation("RefNormaRegExcs");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefMotivoEscoam", b =>
                {
                    b.Navigation("Escoamentos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefNivelCompart", b =>
                {
                    b.Navigation("Comparticipacaos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefNormaRegExc", b =>
                {
                    b.Navigation("Comparticipacaos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefRegimeExcecional", b =>
                {
                    b.Navigation("Comparticipacaos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefSexo", b =>
                {
                    b.Navigation("Alerta");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTemperaturaArmaz", b =>
                {
                    b.Navigation("CondArmazenamentos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoAlertum", b =>
                {
                    b.Navigation("Alerta");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoApresentacao", b =>
                {
                    b.Navigation("Alerta");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoAutoriz", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoDestinatario", b =>
                {
                    b.Navigation("MensagemAlerta");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoEmb", b =>
                {
                    b.Navigation("Embalagems");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoPreco", b =>
                {
                    b.Navigation("Precos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoProcedimento", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoProduto", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoRegime", b =>
                {
                    b.Navigation("Comparticipacaos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTipoTratamento", b =>
                {
                    b.Navigation("Embalagems");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefTitularAim", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefUnidade", b =>
                {
                    b.Navigation("EmbalagemUnidQuantTots");

                    b.Navigation("EmbalagemUnidQuants");
                });

            modelBuilder.Entity("SanaVitaAPI.Models.RefUnidadeTemporal", b =>
                {
                    b.Navigation("CondArmazenamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
